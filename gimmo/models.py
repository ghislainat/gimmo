from django.db import models
from django.contrib.auth.models import User
from PIL import Image

# Create your models here.

class Employe(models.Model):
    idpub = models.TextField()
    civilite = models.TextField()
    nom = models.TextField()
    prenoms = models.TextField()
    daten = models.DateField(blank=True, null=True, default='2021-12-14')
    profession = models.TextField()
    adresse = models.TextField()
    tel = models.IntegerField()
    naturepiece = models.TextField()
    numpiece = models.TextField()
    lpiece = models.TextField()
    dpiece = models.DateField(blank=True, null=True, default='2021-12-14')
    epiece = models.DateField(blank=True, null=True, default='2021-12-14')
    statutma = models.TextField()
    nbenfant = models.IntegerField()
    typecontrat = models.TextField()
    nomu = models.TextField()
    prenomsu = models.TextField()
    contactu = models.TextField()
    photo = models.ImageField(upload_to='images/' ,null=True)
    d1 = models.IntegerField()
    d2 = models.IntegerField()
    d3 = models.IntegerField()
    d4 = models.IntegerField()
    d5 = models.IntegerField()
    d6 = models.IntegerField()
    d7 = models.IntegerField()
    d8 = models.IntegerField()
    d9 = models.IntegerField()
    d10 = models.IntegerField()
    d11 = models.IntegerField()
    d12 = models.IntegerField()
    d13 = models.IntegerField()
    d14 = models.IntegerField()
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    creation = models.DateTimeField(blank=True, null=True)


class Proprietaire(models.Model):
    idpub = models.TextField()
    nom = models.TextField()
    prenom = models.TextField()
    civilite = models.TextField()
    datenaiss = models.DateField(blank=True, null=True)
    profession = models.TextField()
    lieutaf = models.TextField()
    naturepiece = models.TextField()
    numpiece = models.TextField()
    lieudelivrance = models.TextField()
    datedelivrance = models.DateField(blank=True, null=True)
    dateexpir = models.DateField(blank=True, null=True)
    adresse = models.TextField()
    ville = models.TextField()
    quartier = models.TextField()
    fixe = models.TextField()
    tel = models.TextField()
    nomu = models.TextField()
    prenomu = models.TextField()
    contactu = models.TextField()
    photo = models.ImageField(upload_to='images/' ,null=True)
    d1 = models.IntegerField()
    d2 = models.IntegerField()
    d3 = models.IntegerField()
    d4 = models.IntegerField()
    d5 = models.IntegerField()
    d6 = models.IntegerField()
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    creation = models.DateTimeField()


class Bien(models.Model):
    idpub = models.TextField()
    vente = models.IntegerField()
    numlot = models.IntegerField()
    lot = models.TextField()
    titrefoncier = models.TextField()
    superficie = models.FloatField()
    nom = models.TextField()
    typebien = models.IntegerField()
    adresse = models.TextField()
    ville = models.TextField()
    quartier = models.TextField()
    valeur = models.FloatField()
    commision = models.FloatField()
    etat = models.IntegerField()
    mandat = models.TextField()
    photo = models.ImageField(upload_to='images/' ,null=True)
    proprietaire = models.ForeignKey(Proprietaire, on_delete=models.CASCADE)
    creation = models.DateTimeField()


class Locative(models.Model):
    idpub = models.TextField()
    typelocative = models.IntegerField()
    meuble = models.IntegerField()
    montant = models.FloatField()
    charge = models.FloatField()
    nombrepiece = models.IntegerField()
    reflocative = models.TextField()
    superficie = models.FloatField()
    etat = models.IntegerField()
    photo = models.ImageField(upload_to='images/' ,null=True)
    bien = models.ForeignKey(Bien, on_delete=models.CASCADE)
    creation = models.DateTimeField()


class Locataire(models.Model):
    idpub = models.TextField()
    raisonsocial = models.TextField()
    formejuridique = models.TextField()
    comptecontribuable = models.TextField()
    registrecommerce = models.TextField()
    siege = models.TextField()
    secteur = models.TextField()
    contactentre = models.TextField()
    adresseentre = models.TextField()
    nom = models.TextField()
    prenom = models.TextField()
    civilite = models.TextField()
    statumat = models.TextField()
    nbenfant = models.TextField()
    datenaiss = models.DateField(blank=True, null=True, default='2021-12-14')
    profession = models.TextField()
    lieutaf = models.TextField()
    naturepiece = models.TextField()
    numpiece = models.TextField()
    lieudelivrance = models.TextField()
    datedelivrance = models.DateField(blank=True, null=True, default='2021-12-14')
    dateexpir = models.DateField(blank=True, null=True, default='2021-12-14')
    adresse = models.TextField()
    fixe = models.TextField()
    tel = models.TextField()
    nomu = models.TextField()
    prenomu = models.TextField()
    contactu = models.TextField()
    photo = models.ImageField(upload_to='images/' ,null=True)
    d1 = models.IntegerField()
    d2 = models.IntegerField()
    d3 = models.IntegerField()
    d4 = models.IntegerField()
    d5 = models.IntegerField()
    d6 = models.IntegerField()
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    creation = models.DateTimeField(blank=True, null=True)

class Contrat(models.Model):
    idpub = models.TextField()
    refcontrat = models.TextField()
    typecontrat = models.IntegerField()
    caution = models.IntegerField()
    totcaution = models.FloatField()
    avance = models.IntegerField()
    totavance = models.FloatField()
    totallocative = models.FloatField()
    totalsurlocative = models.FloatField()
    totalgeneral = models.FloatField()
    nbpaiement = models.IntegerField()
    prochainpay = models.DateField()
    datesign = models.DateField()
    dateentree = models.DateField()
    datefin = models.DateField(auto_now_add=False, auto_now= False,blank=True, null=True)
    retard = models.IntegerField()
    limite = models.IntegerField()
    visitemtt = models.FloatField()
    visiteqte = models.IntegerField()
    visitetva = models.FloatField()
    visitetot = models.FloatField()
    honorairemtt = models.FloatField()
    honoraireqte = models.IntegerField()
    honorairetva = models.FloatField()
    honorairetot = models.FloatField()
    droitmtt = models.FloatField()
    droitqte = models.IntegerField()
    droittva = models.FloatField()
    droittot = models.FloatField()
    timbremtt = models.FloatField()
    timbreqte = models.IntegerField()
    timbretva = models.FloatField()
    timbretot = models.FloatField()
    fraisdossiermtt = models.FloatField()
    fraisdossierqte = models.IntegerField()
    fraisdossiertva = models.FloatField()
    fraisdossiertot = models.FloatField()
    assurancemtt = models.FloatField()
    assuranceqte = models.IntegerField()
    assurancetva = models.FloatField()
    assurancetot = models.FloatField()
    activecontrat = models.IntegerField()
    proprietaire = models.ForeignKey(Proprietaire, on_delete=models.CASCADE)
    bien = models.ForeignKey(Bien, on_delete=models.CASCADE)
    locative = models.ForeignKey(Locative, on_delete=models.CASCADE)
    locataire = models.ForeignKey(Locataire, on_delete=models.CASCADE)
    creation = models.DateTimeField(blank=True, null=True)


class Facture(models.Model):
    idpub = models.TextField()
    reffacture = models.TextField()
    typefacture = models.TextField()
    dureepay = models.IntegerField()
    debutpay = models.DateField(auto_now_add=False, auto_now= False,blank=True, null=True)
    finpay = models.DateField(auto_now_add=False, auto_now= False,blank=True, null=True)
    totfacture = models.FloatField()
    payefacture = models.FloatField()
    restefacture = models.FloatField()
    retardfacture = models.FloatField()
    finaltotal = models.FloatField()
    etat = models.IntegerField()
    locataire = models.ForeignKey(Locataire, on_delete=models.CASCADE)
    locative = models.ForeignKey(Locative, on_delete=models.CASCADE)
    contrat = models.ForeignKey(Contrat, on_delete=models.CASCADE)
    creation = models.DateTimeField()


class Facturedetails(models.Model):
    idpub = models.TextField()
    reftrans = models.TextField()
    paye = models.FloatField()
    reste = models.FloatField()
    typetrans = models.IntegerField()
    etat = models.IntegerField()
    facture = models.ForeignKey(Facture, on_delete=models.CASCADE)
    creation = models.DateTimeField()


class Log(models.Model):
    actiondate = models.DateTimeField()
    actiontext = models.TextField()
    user = models.ForeignKey(User, on_delete=models.CASCADE)


class Etablissement(models.Model):
    idpub = models.TextField()
    raisonsocial = models.TextField()
    formejuridique = models.TextField()
    comptecontribuable = models.TextField()
    registrecommerce = models.TextField()
    secteur = models.TextField()
    telfixe = models.TextField()
    tel = models.TextField()
    siege = models.TextField()
    adresse = models.TextField()
    email = models.TextField()
    devise = models.TextField()
    visitemtt = models.FloatField()
    honorairemtt = models.FloatField()
    droitmtt = models.FloatField()
    timbremtt = models.FloatField()
    fraisdossiermtt = models.FloatField()
    assurancemtt = models.FloatField()
    tva = models.FloatField()
    margepay = models.IntegerField()
    activepro = models.BooleanField()
    activeloc = models.BooleanField()
    emailsend = models.BooleanField()
    smssend = models.BooleanField()
    ouverture = models.DateField(blank=True, null=True, default='2021-12-14')
    etat = models.IntegerField()
    logo = models.ImageField(upload_to='images/' ,null=True)
    tampon = models.ImageField(upload_to='images/' ,null=True)
    creation = models.DateTimeField()

class Themevar(models.Model):
    etat = models.IntegerField()
    user = models.ForeignKey(User, on_delete=models.CASCADE)

class Message(models.Model):
    idpub = models.TextField()
    etat = models.IntegerField()
    message = models.TextField()
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    creation = models.DateTimeField()

class Fichier(models.Model):
    idpub = models.TextField()
    etat = models.IntegerField()
    nom = models.TextField()
    fichier = models.FileField(upload_to='images/' ,null=True)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    creation = models.DateTimeField()

class Depense(models.Model):
    idpub = models.TextField()
    refdep = models.TextField()
    valeur = models.FloatField()
    description = models.TextField()
    etat = models.IntegerField()
    proprietaire = models.ForeignKey(Proprietaire, on_delete=models.CASCADE)
    bien = models.ForeignKey(Bien, on_delete=models.CASCADE)
    locative = models.IntegerField()
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    creation = models.DateTimeField()

class Softkeyactive(models.Model):
  keyword = models.TextField()
  datesoft = models.DateTimeField()

class Tempsoftkeyactive(models.Model):
  keyword = models.TextField()
  typeab = models.IntegerField()
  etat = models.IntegerField()
  datesoft = models.DateTimeField()